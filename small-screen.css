/* `<Select/>`s and `<DatePicker/>`s go fullscreen when expanded */
.rrui__select__options:not(.rrui__select__options--autocomplete),
.rrui__date-picker__collapsible
{
	position: fixed;
	top: 0;
	bottom: 0;
	right: 0;
	left: 0;
	margin: 0;
	z-index: 100;
	max-height: none !important;
}

/* "Close" button for full-screen `<Select/>`s */
.rrui__select__close,
.rrui__date-picker__close
{
	z-index: 100;
}

/*
Displays a click-intercepting overlay
over `<DatePicker/>`'s `<input/>`
so that the keyboard doesn't slide from bottom
pushing the expanded `<DatePicker/>` from the screen.
*/
.rrui__date-picker__input-overlay
{
	display: block;
}

/* Show "Close" button for full-screen `<DatePicker/>`s */
.rrui__date-picker__close
{
	display: block;
}

/* Show "Close" button for full-screen `<Select/>`s */
.rrui__select__close:not(.rrui__select__close--autocomplete)
{
	display: block;
}

/* `<Modal/>` goes full-screen wide and high */
.rrui__modal__overlay
{
	display: block;
}

/* CSS selector specificity fix for the above rule */
.rrui__modal__overlay--hidden
{
	display: none;
}

/* Centers `<Modal/>` content (body) horizontally and vertically */
.rrui__modal__container
{
	display: flex;
	align-items: center;
	justify-content: center;
}

/* `<Modal/>` goes full-screen wide and high */
.rrui__modal__vertical-margin
{
	display: none;
}

/* `<Modal/>` goes full-screen wide and high */
.rrui__modal__contents
{
	border-radius: 0;
}

/* `<Modal/>` content goes full-screen wide and high */
.rrui__modal__title,
.rrui__modal__actions,
.rrui__modal__content
{
  /* Using `margin` instead of `padding` here
    to leverage the "margin collapse" CSS feature. */
  margin-top    : calc(3 * 0.3rem);
  margin-bottom : calc(3 * 0.3rem);
  margin-left   : calc(3 * 0.3rem);
  margin-right  : calc(3 * 0.3rem);
}

/* `<Modal/>` content goes full-screen wide and high */
.rrui__modal__actions
{
  margin-top    : calc(2 * 0.3rem);
  margin-bottom : calc(2 * 0.3rem);
}

/*
Don't dim the screen when showing `<Modal/>`s
sinse they're fullscreen.
*/
.ReactModal__Overlay--after-open
{
	background-color : transparent;
}

/* Reduce `<Modal/>` scaling motion on smaller screens */
.rrui__modal__contents
{
	/*
	Scaling `<Modal/>` down on appear looks cool
	but it also can cause scrollbars to appear
	due to overflow which is a weird `scale()` behaviour.
	Those scrollbars alter window width resulting in
	`<Modal/>` positioning glitches (while centering itself).
	Therefore not using `scale()`s above `1`, only downscaling.
	transform: scale(1.07);
	*/
	transform : scale(0.995);
}

/* This rule is required for closing animation */
.ReactModal__Content--before-close .rrui__modal__contents
{
	transform : scale(0.995);
}

/* The styles for an open `<Modal/>` */
.ReactModal__Content--after-open .rrui__modal__contents
{
	transform : scale(1);
}

/* Shortening `<Modal/>` animation duration */
.rrui__modal__contents
{
	transition : transform 100ms ease-out;
}
